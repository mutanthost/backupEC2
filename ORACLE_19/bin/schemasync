#!/bin/sh

# ORACLE_HOME must be set and the directory must exist.
# if it is already defined as an environment variable that will be used.

if [ "${ORACLE_HOME}" = "" ]; then
   ORACLE_HOME=/u01/app/oracle/product/19.0.0/dbhome_1
   export ORACLE_HOME
fi

if [ ! -d "${ORACLE_HOME}" ]; then
   echo "$ORACLE_HOME directory does not exist. Please verify"
   exit
fi
# A few platforms use an environment variable other than LD_LIBRARY_PATH
SET_DEFAULT=YES
PLATFORM=`uname`
M_ARCH=`uname -m`
if [ "$PLATFORM" = Linux -a "$M_ARCH" = s390x ]; then
  SET_DEFAULT=NO
  LD_LIBRARY_PATH=$ORACLE_HOME/lib32:$ORACLE_HOME/network/lib32:$LD_LIBRARY_PATH
  export LD_LIBRARY_PATH
fi

# for Sparc64, HP-PA, HPI invoke java with -d64 option to run in 64-bit mode.
JAVAMODE=
# for specific platforms reset variables and set others as needed.

case $PLATFORM in "SunOS")
   PLATFORM_ARCH=`uname -p`
   case $PLATFORM_ARCH in "sparc")
       JAVAMODE=-d64
   esac
esac
case $PLATFORM in "HP-UX")
   SET_DEFAULT=NO
   JAVAMODE=-d64
   SHLIB_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/network/lib:$SHLIB_PATH
   LD_LIBRARY_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/network/lib:$LD_LIBRARY_PATH
   export SHLIB_PATH
   export LD_LIBRARY_PATH
esac
case $PLATFORM in "AIX")
   SET_DEFAULT=NO
   LIBPATH=$ORACLE_HOME/lib:$ORACLE_HOME/network/lib:$LIBPATH
   export LIBPATH
esac

if [ "$PLATFORM" = Linux -a "$M_ARCH" = s390x ]; then
  SET_DEFAULT=NO
  LD_LIBRARY_PATH=$ORACLE_HOME/lib32:$ORACLE_HOME/network/lib32:$LD_LIBRARY_PATH
  export LD_LIBRARY_PATH
fi
case $SET_DEFAULT in "YES")
if  [ -d ${ORACLE_HOME}/lib32 ]; then
  LD_LIBRARY_PATH=$ORACLE_HOME/lib32:$ORACLE_HOME/network/lib32:$LD_LIBRARY_PATH
  export LD_LIBRARY_PATH
  LD_LIBRARY_PATH_64=$ORACLE_HOME/lib:$ORACLE_HOME/network/lib:$LD_LIBRARY_PATH_64
  export LD_LIBRARY_PATH_64
else
  LD_LIBRARY_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/network/lib:$LD_LIBRARY_PATH
  export LD_LIBRARY_PATH
fi
esac

JAVA_HOME=$ORACLE_HOME/jdk
export JAVA_HOME
JAVAEXE=java

# make sure jdk is installed
if [ ! -d ${JAVA_HOME} ]; then
   echo "$JAVA_HOME not found.";
   exit -1
fi

LDAPJCLNT12=$ORACLE_HOME/jlib/ldapjclnt12.jar
# make sure ldapjclnt12.jar is present
if [ ! -f "$LDAPJCLNT12" ]; then
   echo "Missing jar file."
   echo "$LDAPJCLNT12 not found"
   exit -1 
fi

PATH=$ORACLE_HOME/bin:$PATH ; export PATH

# usage message
usage() {
  cat <<USAGE
  schemasync -srchost <src host> -srcport <src port> 
             -srcdn <Src BindDN> -srcpwd <Src passwd> 
             -dsthost <dst host> -dstport <dst port>
             -dstdn <Dst BindDN> -dstpwd <Dst passwd> 
USAGE
exit 2
}


ODI_HOME=$ORACLE_HOME/ldap/odi

export CLASSPATH=$ORACLE_HOME/ldap/odi/jlib/dmu.jar:${LDAPJCLNT12}:$ORACLE_HOME/ldap/odi/jlib/sync.jar:$CLASSPATH

$JAVA_HOME/jre/bin/$JAVAEXE -classpath ${CLASSPATH} oracle.ldap.dmu.SchemaMigrater $ORACLE_HOME "$@"

exit $?
